{"version":3,"sources":["components/ErrorMessage.tsx","redux/actionTypes.ts","redux/reducers/system.ts","redux/reducers/tasks.ts","redux/reducers/modal.ts","redux/reducers/boards.ts","redux/reducers/index.ts","redux/store.ts","redux/actions/fetch.ts","redux/actions/system.ts","components/PasswordInput.tsx","components/Auth/SignIn.tsx","components/Route/PrivateRoute.tsx","components/Route/AuthRoute.tsx","redux/actions/boards.ts","redux/actions/modal.ts","redux/actions/tasks.ts","components/Dashboard/Task.tsx","components/Dashboard/Board.tsx","components/Dashboard/NewBoard.tsx","components/Modal/AddTask.tsx","components/Modal/ChangeTask.tsx","components/Modal/Modal.tsx","components/Dashboard/Dashboard.tsx","theme.ts","components/Auth/SignUp.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","boxSizing","paddingTop","paddingBottom","overflow","transition","display","alignItems","color","palette","error","main","ico","marginRight","enter","maxHeight","opacity","enterActive","exit","exitActive","Message","msg","show","ani","prevMsg","useRef","useEffect","current","CSSTransition","in","unmountOnExit","timeout","classNames","Box","className","ErrorOutline","fontSize","Typography","INIT","USER_AUTHORIZE","USER_UNAUTHORIZE","ADD_TASK","ADD_BOARD","DELETE_TASK","DELETE_BOARD","CHANGE_TASK","MOVE_TASK","BOARD_INIT","RENAME_BOARD","OPEN_MODAL","CLOSE_MODAL","initialState","isInit","user","systemReducer","state","action","type","console","log","payload","cardsReducer","tasks","map","task","id","board","filter","isOpen","props","modalReducer","rootReducer","combineReducers","system","modal","boards","name","store","createStore","kanban","applyMiddleware","thunk","URL","fetchPrivateData","url","config","a","token","localStorage","getItem","dispatch","Error","fetch","headers","response","ok","status","removeItem","json","appInit","then","username","email","catch","e","authorize","API","body","onError","method","JSON","stringify","data","setItem","jwt","signIn","signUp","signOut","PasswordField","useState","showPassword","setShowPassword","TextField","size","variant","fullWidth","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","Visibility","VisibilityOff","schema","yup","identifier","required","password","matches","min","connect","bindActionCreators","useFormik","initialValues","validationSchema","onSubmit","values","setSubmitting","setStatus","handleSubmit","errors","touched","handleChange","handleBlur","isSubmitting","maxWidth","mx","Card","elevation","p","align","gutterBottom","noValidate","ErrorMessage","py","label","onChange","onBlur","value","toString","to","Button","disabled","CircularProgress","children","boardInit","Promise","all","description","message","deleteBoard","renameBoard","closeModal","openModal","moveTask","changeTask","deleteTask","styles","accordion","isDragging","expandMore","transform","expanded","details","wordBreak","Task","memo","React","setExpanded","useDrag","item","collect","monitor","drag","pt","Accordion","ref","AccordionSummary","preventDefault","flex","mr","Edit","Delete","ExpandMore","AccordionDetails","card","isOver","backgroundColor","secondary","light","padding","width","boxShadow","shadows","Board","useDrop","accept","drop","canDrop","classes","editable","setEditable","setValue","pending","setPending","px","height","borderBottom","style","autoFocus","autoComplete","currentTarget","justifyContent","minHeight","Add","TransitionGroup","addBoard","resetForm","validate","validateOnMount","validateForm","isValid","pb","inputProps","maxLength","addTask","formik","isInitialValid","multiline","rows","ChangeTask","Transition","forwardRef","Slide","direction","title","getBody","Dialog","TransitionComponent","keepMounted","open","onClose","DialogContent","Close","flexWrap","paddingLeft","paddingRight","transitionItem","spacing","pink","createMuiTheme","primary","dark","overrides","MuiTypography","h3","fontFamily","textTransform","fontWeight","h6","body1","MuiIconButton","colorPrimary","MuiButton","contained","confirmPassword","oneOf","logo","flexGrow","ThemeProvider","CssBaseline","AppBar","Toolbar","component","mt","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.3ab8a1ad.chunk.js","sourcesContent":["import React, { FC, useEffect, useRef } from 'react'\r\nimport { ErrorOutline } from '@material-ui/icons'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { Box, makeStyles, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        boxSizing: 'border-box',\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n        overflow: 'hidden',\r\n        transition: '.7s cubic-bezier(0, 0.55, 0.45, 1)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: theme.palette.error.main\r\n    },\r\n    ico: {\r\n        marginRight: 8\r\n    },\r\n    enter: {\r\n        maxHeight: 0,\r\n        opacity: 0\r\n    },\r\n    enterActive: {\r\n        maxHeight: 100,\r\n        opacity: 1\r\n    },\r\n    exit: {\r\n        maxHeight: 100,\r\n    },\r\n    exitActive: {\r\n        maxHeight: 0,\r\n        opacity: 0\r\n    }\r\n}))\r\n\r\ntype Props = {\r\n    msg?: string\r\n    show: boolean\r\n}\r\n\r\nconst Message: FC<Props> = ({ msg, show } ) => {\r\n    const { root, ico, ...ani } = useStyles()\r\n    const prevMsg: React.MutableRefObject<string | undefined> = useRef()\r\n\r\n    useEffect(() => {\r\n        prevMsg.current = msg\r\n    })\r\n\r\n    return <CSSTransition in={show} unmountOnExit timeout={700} classNames={ani}>\r\n        <Box className={root}>\r\n            <ErrorOutline color=\"inherit\" fontSize='small' className={ico} />\r\n            <Typography>{msg || prevMsg.current}</Typography>\r\n        </Box>\r\n    </CSSTransition>\r\n}\r\n\r\nexport default Message","export const INIT = 'INIT'\r\nexport const USER_AUTHORIZE = 'USER_AUTHORIZE'\r\nexport const USER_UNAUTHORIZE = 'USER_UNAUTHORIZE'\r\nexport const ADD_TASK = 'ADD_TASK'\r\nexport const ADD_BOARD = 'ADD_BOARD'\r\nexport const DELETE_TASK = 'DELETE_TASK'\r\nexport const DELETE_BOARD = 'DELETE_BOARD'\r\nexport const CHANGE_TASK = 'CHANGE_TASK'\r\nexport const MOVE_TASK = 'MOVE_TASK'\r\nexport const BOARD_INIT = 'BOARD_INIT'\r\nexport const RENAME_BOARD = 'RENAME_BOARD'\r\nexport const OPEN_MODAL = 'OPEN_MODAL'\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL'","import { INIT, USER_AUTHORIZE, USER_UNAUTHORIZE } from \"../actionTypes\"\r\nimport { SystemActionTypes, SystemState } from \"../types\"\r\n\r\nconst initialState: SystemState = {\r\n    isInit: false,\r\n    user: null\r\n}\r\n\r\nfunction systemReducer(\r\n    state = initialState,\r\n    action: SystemActionTypes\r\n): SystemState {\r\n    switch (action.type) {\r\n        case INIT:\r\n            console.log(action.type, action)\r\n            return {\r\n                ...state,\r\n                isInit: true,\r\n                user: action!.payload\r\n            }\r\n        case USER_AUTHORIZE: {\r\n            return {\r\n                ...state,\r\n                user: action!.payload\r\n            }\r\n        }\r\n\r\n        case USER_UNAUTHORIZE: {\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default systemReducer","import { MOVE_TASK, ADD_TASK, CHANGE_TASK, BOARD_INIT, DELETE_TASK } from \"../actionTypes\"\r\nimport { TaskActionTypes } from \"../types\"\r\n\r\nconst initialState: Task[] = []\r\n\r\nfunction cardsReducer(\r\n    state = initialState,\r\n    action: TaskActionTypes\r\n): Task[] {\r\n    switch (action.type) {\r\n        case BOARD_INIT:\r\n            return action.payload.tasks\r\n\r\n        case MOVE_TASK:\r\n            return state.map(task =>\r\n                task.id === action.payload.id\r\n                    ? { ...task, board: action.payload.board }\r\n                    : task\r\n            )\r\n\r\n        case CHANGE_TASK:\r\n            return state.map(task =>\r\n                task.id === action.payload.id\r\n                    ? { ...task, ...action.payload }\r\n                    : task\r\n            )\r\n\r\n        case ADD_TASK:\r\n            return [...state, action.payload]\r\n\r\n        case DELETE_TASK:\r\n            return state.filter(task => task.id !== action.payload.id)\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cardsReducer","import { CLOSE_MODAL, OPEN_MODAL } from \"../actionTypes\"\r\nimport { ModalActionTypes, ModalState } from \"../types\"\r\n\r\nconst initialState: ModalState = {\r\n    isOpen: false,\r\n    type: null,\r\n    props: {}\r\n}\r\n\r\nfunction modalReducer(\r\n    state = initialState,\r\n    action: ModalActionTypes\r\n): ModalState {\r\n    switch (action.type) {\r\n        case OPEN_MODAL:\r\n            return {\r\n                isOpen: true,\r\n                ...action.payload\r\n            }\r\n        case CLOSE_MODAL: {\r\n            return initialState\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default modalReducer","import { ADD_BOARD, BOARD_INIT, DELETE_BOARD, RENAME_BOARD } from \"../actionTypes\"\r\nimport { BoardActionTypes } from \"../types\"\r\n\r\nconst initialState: Board[] = []\r\n\r\nexport default function boardsReducer(\r\n    state = initialState,\r\n    action: BoardActionTypes\r\n): Board[] {\r\n    switch (action.type) {\r\n        case BOARD_INIT:\r\n            return action.payload.boards\r\n\r\n        case RENAME_BOARD:\r\n            return state.map(board =>\r\n                board.id === action.payload.id\r\n                    ? { ...board, name: action.payload.name }\r\n                    : board\r\n            )\r\n\r\n        case ADD_BOARD:\r\n            return [...state, action.payload]\r\n\r\n        case DELETE_BOARD:\r\n            return state.filter(board => board.id !== action.payload.id)\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\"\r\nimport system from \"./system\"\r\nimport tasks from \"./tasks\"\r\nimport modal from \"./modal\"\r\nimport boards from \"./boards\"\r\n\r\nconst rootReducer = combineReducers({\r\n    system,\r\n    tasks,\r\n    modal,\r\n    boards\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\"\r\nimport kanban from \"./reducers\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nconst store = createStore(kanban, applyMiddleware(thunk))\r\n\r\nexport default store","import { USER_UNAUTHORIZE } from '../actionTypes'\r\nimport store from '../store'\r\n\r\nexport const URL = 'https://hedelwing-kanban.herokuapp.com' || process.env.API\r\n\r\nexport const fetchPrivateData = async (url: string, config?: RequestInit) => {\r\n    const token = localStorage.getItem('token')\r\n\r\n    if (!token) {\r\n        store.dispatch({\r\n            type: USER_UNAUTHORIZE\r\n        })\r\n\r\n        throw new Error('Что-то пошло не так')\r\n    }\r\n\r\n    const response = await fetch(url, { ...config, headers: { ...config?.headers, \"Authorization\": `Bearer ${token}` } })\r\n\r\n    if (!response.ok) {\r\n        if (response.status === 401) {\r\n            localStorage.removeItem('token')\r\n\r\n            store.dispatch({\r\n                type: USER_UNAUTHORIZE\r\n            })\r\n        }\r\n\r\n        throw new Error('Что-то пошло не так')\r\n    }\r\n\r\n    return await response.json()\r\n}","import { Dispatch } from 'redux'\r\nimport { INIT, USER_AUTHORIZE, USER_UNAUTHORIZE } from '../actionTypes'\r\nimport { AuthorizeAction } from '../types'\r\nimport { fetchPrivateData, URL } from './fetch'\r\n\r\ntype signInBody = {\r\n    identifier: string\r\n    password: string\r\n}\r\n\r\ntype signUpBody = {\r\n    username: string\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport const appInit = () =>\r\n    (dispatch: Dispatch) =>\r\n        fetchPrivateData(`${URL}/users/me`)\r\n            .then(({ username, email }) => dispatch({\r\n                type: INIT,\r\n                payload: { username, email }\r\n            }))\r\n            .catch((e) => dispatch({\r\n                type: INIT,\r\n                payload: null\r\n            }))\r\n\r\nfunction authorize(API: string) {\r\n    return (body: signInBody | signUpBody, onError: Function) =>\r\n        async (dispatch: Dispatch) => {\r\n            try {\r\n                const response = await fetch(API, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                })\r\n\r\n                const data = await response.json()\r\n\r\n                if (!response.ok)\r\n                    onError('Проверьте правильность вводимых данных')\r\n\r\n                else {\r\n                    const { email, username } = data.user\r\n\r\n                    localStorage.setItem('token', data.jwt)\r\n\r\n                    dispatch<AuthorizeAction>({\r\n                        type: USER_AUTHORIZE,\r\n                        payload: { email, username }\r\n                    })\r\n                }\r\n            }\r\n            catch (e) {\r\n                onError('Нет соединения с сервером')\r\n            }\r\n        }\r\n}\r\n\r\nexport const signIn = authorize(`${URL}/auth/local`)\r\nexport const signUp = authorize(`${URL}/auth/local/register`)\r\n\r\nexport const signOut = () =>\r\n    (dispatch: Dispatch) => {\r\n        localStorage.removeItem('token')\r\n\r\n        dispatch({\r\n            type: USER_UNAUTHORIZE,\r\n        })\r\n    }\r\n","import { IconButton, InputAdornment, TextField, TextFieldProps } from \"@material-ui/core\"\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\"\r\nimport { useState } from \"react\"\r\n\r\nconst PasswordField = (props: TextFieldProps) => {\r\n    const [showPassword, setShowPassword] = useState(false)\r\n\r\n    return <TextField\r\n        type={showPassword ? 'text' : 'password'}\r\n        size='small'\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        InputProps={{\r\n            endAdornment: <InputAdornment position=\"end\">\r\n                <IconButton\r\n                    size='small'\r\n                    onClick={() => setShowPassword(show => !show)}\r\n                >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n            </InputAdornment>,\r\n        }}\r\n        {...props}\r\n    />\r\n}\r\n\r\nexport default PasswordField","import { Box, Button, Card, CircularProgress, TextField, Typography } from \"@material-ui/core\"\r\nimport { useFormik } from \"formik\"\r\nimport ErrorMessage from '../ErrorMessage'\r\nimport *  as yup from 'yup'\r\nimport { connect } from \"react-redux\"\r\nimport { signIn } from \"../../redux/actions/system\"\r\nimport { Link } from \"react-router-dom\"\r\nimport PasswordField from \"../PasswordInput\"\r\nimport { bindActionCreators, Dispatch } from \"redux\"\r\nimport { FC } from \"react\"\r\n\r\nconst schema = yup.object({\r\n    identifier: yup\r\n        .string()\r\n        .required('заполните поле')\r\n        .email('некорректный email'),\r\n    password: yup\r\n        .string()\r\n        .required('заполните поле')\r\n        .matches(/[A-ZА-ЯЁ]/, 'должен содержать заглавные символы')\r\n        .matches(/[a-zа-яё]/, 'должен содержать cтрочные символы')\r\n        .matches(/\\d/, 'должен содержать цифры')\r\n        .min(8, 'минимум 8 символов')\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({ signIn }, dispatch)\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps>\r\n\r\nconst SignIn: FC<Props> = ({ signIn }) => {\r\n    const { handleSubmit, values, errors, touched, handleChange, handleBlur, status, isSubmitting } = useFormik({\r\n        initialValues: { identifier: '', password: '' },\r\n        validationSchema: schema,\r\n        onSubmit: async (values, { setSubmitting, setStatus }) => {\r\n            await signIn(values, setStatus)\r\n\r\n            setSubmitting(false)\r\n        }\r\n    })\r\n\r\n    return <Box maxWidth={360} mx='auto'>\r\n        <Card elevation={3}>\r\n            <Box p={2}>\r\n                <Typography align='center' variant='h6' gutterBottom>\r\n                    Вход\r\n                </Typography>\r\n                <form noValidate onSubmit={handleSubmit}>\r\n                    <ErrorMessage\r\n                        msg={status}\r\n                        show={!!status}\r\n                    />\r\n                    <Box py={1}>\r\n                        <TextField\r\n                            name='identifier'\r\n                            label='Email'\r\n                            size='small'\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.identifier}\r\n                            fullWidth\r\n                        />\r\n                        <ErrorMessage\r\n                            show={!!(touched.identifier && errors.identifier)}\r\n                            msg={errors.identifier?.toString()}\r\n                        />\r\n                    </Box>\r\n                    <Box py={1}>\r\n                        <PasswordField\r\n                            name='password'\r\n                            label='Пароль'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password}\r\n                        />\r\n                        <ErrorMessage\r\n                            show={!!(touched.password && errors.password)}\r\n                            msg={errors.password?.toString()}\r\n                        />\r\n                    </Box>\r\n                    <Box py={1}>\r\n                        <Typography align='center'>\r\n                            Нет аккаунта?{' '}<Link to='/signup'>Зарегистрироваться</Link>\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box py={1}>\r\n                        <Button disabled={isSubmitting} type='submit' color='primary' variant='contained' fullWidth>\r\n                            {isSubmitting ? <CircularProgress size={24} /> : 'Отправить'}\r\n                        </Button>\r\n                    </Box>\r\n                </form>\r\n            </Box>\r\n        </Card>\r\n    </Box>\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn)","import { PropsWithChildren } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect, Route, RouteProps } from \"react-router-dom\"\r\nimport { RootState } from \"../../redux/reducers\"\r\nimport { SystemState } from \"../../redux/types\"\r\n\r\nconst PrivateRoute = ({ children, user, ...props }: PropsWithChildren<SystemState & RouteProps>) => <Route {...props}>\r\n    {user\r\n        ? children\r\n        : <Redirect to='/signin' />\r\n    }\r\n</Route>\r\n\r\nexport default connect(({ system }: RootState) => system)(PrivateRoute)","import { PropsWithChildren } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect, Route, RouteProps } from \"react-router-dom\"\r\nimport { RootState } from \"../../redux/reducers\"\r\nimport { SystemState } from \"../../redux/types\"\r\n\r\nconst AuthRoute = ({\r\n    children,\r\n    user,\r\n    ...props\r\n}: PropsWithChildren<SystemState & RouteProps>\r\n) => <Route {...props}>\r\n        {!user\r\n            ? children\r\n            : <Redirect to='/' />\r\n        }\r\n    </Route>\r\n\r\nexport default connect(({ system }: RootState) => system)(AuthRoute)","import { Dispatch } from 'redux'\r\nimport { BOARD_INIT, ADD_BOARD, DELETE_BOARD, RENAME_BOARD } from '../actionTypes'\r\nimport { fetchPrivateData, URL } from './fetch'\r\n\r\nexport const boardInit = () =>\r\n    (dispatch: Dispatch) => {\r\n        Promise.all([`${URL}/boards`, `${URL}/tasks`]\r\n            .map(url => fetchPrivateData(url)))\r\n            .then(([boards, tasks]) =>\r\n                dispatch({\r\n                    type: BOARD_INIT,\r\n                    payload: {\r\n                        boards: boards.map(({ id, name }: any): Board =>\r\n                            ({ id, name })\r\n                        ),\r\n                        tasks: tasks.map(({ id, name, description, board }: any): Task =>\r\n                            ({ id, name, description, board: board.id })\r\n                        )\r\n                    }\r\n                })\r\n            )\r\n            .catch((e) => console.log(e.message))\r\n    }\r\n\r\n\r\nexport const deleteBoard = (id: number) =>\r\n    (dispatch: Dispatch) => {\r\n        return fetchPrivateData(`${URL}/boards/${id}`, {\r\n            method: 'DELETE'\r\n        })\r\n            .then(({ id }) =>\r\n                dispatch({\r\n                    type: DELETE_BOARD,\r\n                    payload: { id }\r\n                })\r\n            )\r\n            .catch((e) => console.log(e.message))\r\n    }\r\n\r\nexport const renameBoard = ({ id, name }: Pick<Board, \"id\" | \"name\">) =>\r\n    (dispatch: Dispatch) => {\r\n        return fetchPrivateData(`${URL}/boards/${id}`, {\r\n            method: 'PUT',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ name })\r\n        })\r\n            .then(({ id, name }) =>\r\n                dispatch({\r\n                    type: RENAME_BOARD,\r\n                    payload: { id, name }\r\n                })\r\n            )\r\n            .catch((e) => console.log(e.message))\r\n    }\r\n\r\n\r\nexport const addBoard = (board: Board) =>\r\n    (dispatch: Dispatch) => {\r\n        return fetchPrivateData(`${URL}/boards`, {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(board)\r\n        })\r\n            .then(({ id, name }) =>\r\n                dispatch({\r\n                    type: ADD_BOARD,\r\n                    payload: { id, name }\r\n                })\r\n            )\r\n            .catch((e) => console.log(e.message))\r\n    }","import { CLOSE_MODAL, OPEN_MODAL } from \"../actionTypes\";\r\n\r\nexport const closeModal = () => ({\r\n    type: CLOSE_MODAL\r\n})\r\n\r\nexport const openModal = (type: ModalTypes, props: any) => ({\r\n    type: OPEN_MODAL,\r\n    payload: {\r\n        type,\r\n        props\r\n    }\r\n})","import { Dispatch } from 'redux'\r\nimport { ADD_TASK, MOVE_TASK, CHANGE_TASK, DELETE_TASK } from '../actionTypes'\r\nimport { fetchPrivateData, URL } from './fetch'\r\nimport { closeModal } from './modal'\r\n\r\n\r\nexport const moveTask = (id: number, board: number) =>\r\n    (dispatch: Dispatch) =>\r\n        fetchPrivateData(`${URL}/tasks/${id}`, {\r\n            method: 'PUT',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ board })\r\n        })\r\n            .then(({ id, board }) => dispatch({\r\n                type: MOVE_TASK,\r\n                payload: { id, board: board.id }\r\n            })\r\n            )\r\n            .catch((e) => console.log(e.message))\r\n\r\nexport const changeTask = (id: number) =>\r\n    (data: Pick<Task, \"name\" | \"description\">) =>\r\n        (dispatch: Dispatch) =>\r\n            fetchPrivateData(`${URL}/tasks/${id}`, {\r\n                method: 'PUT',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(({ id, name, description }) => {\r\n                    dispatch({\r\n                        type: CHANGE_TASK,\r\n                        payload: { id, name, description }\r\n                    })\r\n\r\n                    dispatch(closeModal())\r\n                })\r\n                .catch((e) => console.log(e.message))\r\n\r\nexport const addTask = (data: Pick<Task, \"name\" | \"description\" | \"board\">) =>\r\n    (dispatch: Dispatch) =>\r\n        fetchPrivateData(`${URL}/tasks`, {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(({ id, name, description, board }) => {\r\n                dispatch({\r\n                    type: ADD_TASK,\r\n                    payload: { id, name, description, board: board.id }\r\n                })\r\n\r\n                dispatch(closeModal())\r\n            })\r\n            .catch((e) => console.log(e.message))\r\n\r\n\r\n\r\nexport const deleteTask = (id: number) =>\r\n    (dispatch: Dispatch) =>\r\n        fetchPrivateData(`${URL}/tasks/${id}`, {\r\n            method: 'DELETE'\r\n        })\r\n            .then(({ id }) =>\r\n                dispatch({\r\n                    type: DELETE_TASK,\r\n                    payload: { id }\r\n                })\r\n            )\r\n            .catch((e) => console.log(e.message))\r\n","import { Accordion, AccordionDetails, AccordionSummary, Box, IconButton, makeStyles, Theme, Typography } from '@material-ui/core'\r\nimport { Delete, Edit, ExpandMore } from '@material-ui/icons'\r\nimport React, { FC, memo } from 'react'\r\nimport { useDrag } from 'react-dnd'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators, Dispatch } from 'redux'\r\nimport { deleteTask, openModal } from '../../redux/actions'\r\n\r\ntype StylesProps = {\r\n    isDragging: boolean\r\n    expanded: boolean\r\n}\r\n\r\nconst styles = makeStyles<Theme, StylesProps>({\r\n    accordion: ({ isDragging }) => ({\r\n        opacity: isDragging ? .3 : 1\r\n    }),\r\n    expandMore: ({ expanded }) => ({\r\n        transition: '.3s ease-in',\r\n        transform: expanded ? 'rotate(-180deg)' : 'rotate(0)'\r\n    }),\r\n    details: {\r\n        wordBreak: 'break-word'\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    deleteTask: bindActionCreators(deleteTask, dispatch),\r\n    openModal: bindActionCreators(openModal, dispatch)\r\n})\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & Task\r\n\r\nconst Task: FC<Props> = memo(({ name, id, board, description, deleteTask, openModal }) => {\r\n    const [expanded, setExpanded] = React.useState(false)\r\n\r\n    const [{ isDragging }, drag] = useDrag(() => ({\r\n        item: {\r\n            type: \"TASK\",\r\n            board,\r\n            id,\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    }), [])\r\n\r\n    const { accordion, expandMore, details } = styles({ expanded, isDragging })\r\n\r\n    return <Box pt={1}>\r\n        <Accordion expanded={expanded} ref={drag} className={accordion}>\r\n            <AccordionSummary onClick={e => e.preventDefault()}>\r\n                <Box flex={1}>\r\n                    <Typography variant='h6'>{name}</Typography>\r\n                </Box>\r\n                <Box mr={.5}>\r\n                    <IconButton\r\n                        size='small'\r\n                        color='primary'\r\n                        onClick={() => openModal(\"CHANGE_TASK\", { name, id, description })}\r\n                    >\r\n                        <Edit />\r\n                    </IconButton>\r\n                </Box>\r\n                <Box mr={.5}>\r\n                    <IconButton\r\n                        size='small'\r\n                        color='primary'\r\n                        onClick={() => { deleteTask(id) }}\r\n                    >\r\n                        <Delete />\r\n                    </IconButton>\r\n                </Box>\r\n                <IconButton\r\n                    size='small'\r\n                    color='primary'\r\n                    disabled={!description} onClick={() => { setExpanded(e => !e) }}\r\n                >\r\n                    <ExpandMore className={expandMore} />\r\n                </IconButton>\r\n            </AccordionSummary>\r\n            <AccordionDetails className={details}>\r\n                <Typography>{description}</Typography>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    </Box>\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Task)","import { Box, Card, CircularProgress, IconButton, InputAdornment, makeStyles, TextField, Typography } from '@material-ui/core'\r\nimport { Add, Delete } from '@material-ui/icons'\r\nimport React, { ChangeEvent, FormEvent, memo, FC } from 'react'\r\nimport { useDrop } from 'react-dnd'\r\nimport { connect } from 'react-redux'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { bindActionCreators, Dispatch } from 'redux'\r\nimport { deleteBoard, renameBoard, openModal, moveTask } from '../../redux/actions'\r\nimport { RootState } from '../../redux/reducers'\r\nimport Task from './Task'\r\n\r\nconst styles = makeStyles(theme => ({\r\n    card: ({ isOver }: { isOver: boolean }) => ({\r\n        backgroundColor: isOver ? \"#F0FAFA\" : theme.palette.secondary.light,\r\n        padding: 8,\r\n        transform: isOver ? 'translate3d(0,0,0) scale(1.025)' : 'translate3d(0,0,0) scale(1)',\r\n        transition: '.3s ease',\r\n        width: 360,\r\n        marginRight: 16,\r\n        boxShadow: isOver ? theme.shadows[6] : theme.shadows[3]\r\n    }),\r\n    enter: {\r\n        maxHeight: 0,\r\n        opacity: 0,\r\n        overflow: 'hidden',\r\n        transition: 'max-height .3s ease, opacity .2s ease .3s'\r\n    },\r\n    enterActive: {\r\n        maxHeight: 2000,\r\n        opacity: 1\r\n    },\r\n    exit: {\r\n        maxHeight: 2000,\r\n        opacity: 0,\r\n        overflow: 'hidden',\r\n        transition: 'opacity .3s ease, max-height .2s ease .3s'\r\n    },\r\n    exitActive: {\r\n        opacity: 0,\r\n        maxHeight: 0\r\n    },\r\n}))\r\n\r\nconst mapStateToProps = ({ tasks }: RootState, props: Board) => ({\r\n    tasks: tasks\r\n        .filter((task: Task) => task.board === props.id)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    deleteBoard: bindActionCreators(deleteBoard, dispatch),\r\n    renameBoard: bindActionCreators(renameBoard, dispatch),\r\n    moveTask: bindActionCreators(moveTask, dispatch),\r\n    openModal: bindActionCreators(openModal, dispatch),\r\n})\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps> & Board\r\n\r\nconst Board: FC<Props> = memo(({ id, name, tasks, openModal, deleteBoard, renameBoard, moveTask }) => {\r\n    const [{ isOver }, drop] = useDrop({\r\n        accept: \"TASK\",\r\n        drop: (item: any) => {\r\n            if (item.board !== id) {\r\n                moveTask(item.id, id)\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver() && monitor.canDrop()\r\n        }),\r\n        canDrop: (item) => item.board !== id\r\n    })\r\n\r\n    const { card, ...classes } = styles({ isOver })\r\n\r\n    const [editable, setEditable] = React.useState(false)\r\n    const [value, setValue] = React.useState(name)\r\n    const [pending, setPending] = React.useState(false)\r\n\r\n    const onChange = ({ currentTarget: { value } }: ChangeEvent<HTMLInputElement>) => setValue(value)\r\n\r\n    return <Card ref={drop} className={card}>\r\n        <Box px={1} height={64} display='flex' alignItems='center' borderBottom='1px solid #4C385644'>\r\n            {editable ?\r\n                <form style={{ flex: 1 }} onSubmit={async (e: FormEvent<HTMLFormElement>) => {\r\n                    e.preventDefault()\r\n\r\n                    if (value && value !== name) {\r\n                        setPending(true)\r\n\r\n                        await renameBoard({ id, name: value })\r\n\r\n                        setPending(false)\r\n                    } else setValue(name)\r\n\r\n                    setEditable(false)\r\n                }}>\r\n                    <Box flex={1}>\r\n                        <TextField\r\n                            name='name'\r\n                            size='small'\r\n                            fullWidth\r\n                            value={value}\r\n                            label='Редактирование'\r\n                            autoFocus\r\n                            autoComplete='off'\r\n                            onChange={onChange}\r\n                            InputProps={{\r\n                                endAdornment: pending && <InputAdornment position=\"end\">\r\n                                    <CircularProgress size={20} />\r\n                                </InputAdornment>,\r\n                            }}\r\n                            onBlur={() => setEditable(false)}\r\n                        />\r\n                    </Box>\r\n                </form>\r\n                : <Box display='flex' flex={1} justifyContent='space-between' alignItems='center'>\r\n                    <Box py={1.5} minHeight={40} onClick={() => setEditable(true)}>\r\n                        <Typography variant='h6' align='center'>{name}</Typography>\r\n                    </Box>\r\n                    <Box>\r\n                        <Box display='inline' mr={1}>\r\n                            <IconButton\r\n                                size='small'\r\n                                color='primary'\r\n                                onClick={() => openModal(\"NEW_TASK\", { board: id })}\r\n                            >\r\n                                <Add />\r\n                            </IconButton>\r\n                        </Box>\r\n                        <IconButton\r\n                            size='small'\r\n                            color='primary'\r\n                            onClick={() => deleteBoard(id)}\r\n                        >\r\n                            <Delete />\r\n                        </IconButton>\r\n                    </Box>\r\n                </Box>\r\n            }\r\n        </Box>\r\n        <Box py={2}>\r\n            <TransitionGroup className=\"todo-list\">\r\n                {tasks.map((task: Task) => <CSSTransition\r\n                    key={task.id}\r\n                    timeout={500}\r\n                    classNames={{ ...classes }}\r\n                >\r\n                    <Box>\r\n                        <Task {...task} />\r\n                    </Box>\r\n                </CSSTransition>)}\r\n            </TransitionGroup>\r\n        </Box>\r\n    </Card >\r\n})\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Board)","import { Box, Button, Card, CircularProgress, TextField } from '@material-ui/core'\r\nimport { useFormik } from 'formik'\r\nimport { connect } from 'react-redux'\r\nimport { addBoard } from '../../redux/actions/boards'\r\n\r\nconst NewBoard = ({ addBoard }: { addBoard: Function }) => {\r\n    const { validateForm, handleSubmit, handleChange, values, isSubmitting, isValid } = useFormik({\r\n        initialValues: {\r\n            name: ''\r\n        },\r\n        onSubmit: async (values, { resetForm, setSubmitting }) => {\r\n            await addBoard(values)\r\n\r\n            resetForm()\r\n            setSubmitting(false)\r\n        },\r\n        validate: ({ name }) => {\r\n            return name ? {} : { name: 'Обязательное поле' }\r\n        },\r\n        validateOnMount: true\r\n    })\r\n\r\n    return <Card>\r\n        <Box px={1} py={2}>\r\n            <form onChange={() => validateForm()} onSubmit={handleSubmit}>\r\n                <Box pb={2}>\r\n                    <TextField\r\n                        inputProps={{ maxLength: 16 }}\r\n                        autoComplete='off'\r\n                        onChange={handleChange}\r\n                        name='name'\r\n                        value={values.name}\r\n                        label='Новая колонка'\r\n                        fullWidth\r\n                    />\r\n                </Box>\r\n                <Button\r\n                    disabled={isSubmitting || !isValid}\r\n                    type='submit'\r\n                    color='primary'\r\n                    variant='contained'\r\n                    fullWidth\r\n                >\r\n                    {isSubmitting ? <CircularProgress size={24} /> : 'Отправить'}\r\n                </Button>\r\n            </form>\r\n        </Box>\r\n    </Card>\r\n}\r\nexport default connect(null, { addBoard })(NewBoard)","import { Box, Button, CircularProgress, TextField } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { useFormik } from 'formik'\r\nimport React from 'react'\r\nimport { addTask } from '../../redux/actions/tasks'\r\n\r\nconst AddTask = ({ board, addTask }: any) => {\r\n    const initialValues = {\r\n        description: '',\r\n        name: ''\r\n    }\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit: async (values, { setSubmitting }) => {\r\n            await addTask({ ...values, board })\r\n            setSubmitting(false)\r\n        },\r\n        validate: ({ name }) => {\r\n            return name ? {} : { name: 'Обязательное поле' }\r\n        },\r\n        isInitialValid: false\r\n    })\r\n\r\n    return <form onChange={() => formik.validateForm()} onSubmit={formik.handleSubmit}>\r\n        <Box pb={3}>\r\n            <TextField\r\n                onChange={formik.handleChange}\r\n                size='small'\r\n                label=\"Заголовок\"\r\n                autoComplete='off'\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={formik.values.name}\r\n                name='name'\r\n                inputProps={{ maxLength: 50 }}\r\n            />\r\n        </Box>\r\n        <Box pb={3}>\r\n            <TextField\r\n                onChange={formik.handleChange}\r\n                size='small'\r\n                label=\"Описание\"\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={formik.values.description}\r\n                name='description'\r\n            />\r\n        </Box>\r\n        <Box pb={2}>\r\n            <Button disabled={formik.isSubmitting || !formik.isValid} type='submit' color='primary' variant='contained' fullWidth>\r\n                {formik.isSubmitting ? <CircularProgress size={24} /> : 'Отправить'}\r\n            </Button>\r\n        </Box>\r\n    </form>\r\n}\r\n\r\nexport default connect(null, { addTask })(AddTask)","import { Box, Button, CircularProgress, TextField } from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport { useFormik } from 'formik'\r\nimport React, { FC, memo } from 'react'\r\nimport { changeTask } from '../../redux/actions/tasks'\r\nimport { bindActionCreators, Dispatch } from 'redux'\r\n\r\ntype OwnProps = {\r\n    id: number\r\n    name: string\r\n    description: string\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch, { id }: OwnProps) =>\r\n    ({ changeTask: bindActionCreators(changeTask(id), dispatch) })\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & OwnProps\r\n\r\nconst ChangeTask: FC<Props> = memo(({ name, description, changeTask }) => {\r\n    const { validateForm, handleSubmit, handleChange, values, isSubmitting, isValid } = useFormik({\r\n        initialValues: {\r\n            description,\r\n            name\r\n        },\r\n        onSubmit: async (values, { setSubmitting }) => {\r\n            await changeTask(values)\r\n            setSubmitting(false)\r\n        },\r\n        validate: ({ name }) => {\r\n            return name ? {} : { name: 'Обязательное поле' }\r\n        },\r\n        isInitialValid: false\r\n    })\r\n\r\n    return <form onChange={() => validateForm()} onSubmit={handleSubmit}>\r\n        <Box pb={3}>\r\n            <TextField\r\n                onChange={handleChange}\r\n                size='small'\r\n                label=\"Заголовок\"\r\n                autoComplete='off'\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={values.name}\r\n                name='name'\r\n                inputProps={{ maxLength: 50 }}\r\n            />\r\n        </Box>\r\n        <Box pb={3}>\r\n            <TextField\r\n                onChange={handleChange}\r\n                size='small'\r\n                label=\"Описание\"\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={values.description}\r\n                name='description'\r\n            />\r\n        </Box>\r\n        <Box pb={2}>\r\n            <Button disabled={isSubmitting || !isValid} type='submit' color='primary' variant='contained' fullWidth>\r\n                {isSubmitting ? <CircularProgress size={24} /> : 'Отправить'}\r\n            </Button>\r\n        </Box>\r\n    </form>\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ChangeTask)","import { Box, Dialog, DialogContent, IconButton, Slide, SlideProps, Typography } from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport { connect } from 'react-redux'\r\nimport React from 'react'\r\nimport { RootState } from '../../redux/reducers'\r\nimport AddTask from './AddTask'\r\nimport ChangeTask from './ChangeTask'\r\nimport { closeModal } from '../../redux/actions'\r\nimport { bindActionCreators, Dispatch } from 'redux'\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({ closeModal }, dispatch)\r\nconst mapStateToProps = ({ modal }: RootState) => ({ modal })\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & ReturnType<typeof mapStateToProps>\r\n\r\nconst Transition = React.forwardRef<unknown, SlideProps>((props, ref) => <Slide\r\n    direction=\"up\"\r\n    ref={ref}\r\n    {...props}\r\n/>)\r\n\r\nconst getBody = (type: ModalTypes, props: any) => {\r\n    switch (type) {\r\n        case \"NEW_TASK\":\r\n            return {\r\n                title: \"Новая задача\",\r\n                body: <AddTask {...props} />\r\n            }\r\n\r\n        case \"CHANGE_TASK\":\r\n            return {\r\n                title: \"Редактирование\",\r\n                body: <ChangeTask {...props} />\r\n            }\r\n\r\n        default:\r\n            return {\r\n                title: \"Ошибка\",\r\n                body: null\r\n            }\r\n    }\r\n}\r\n\r\nconst Modal = ({ modal: { isOpen, type, props }, closeModal }: Props) => {\r\n    const { title, body } = getBody(type, props)\r\n\r\n    return <Dialog\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        maxWidth='xs'\r\n        fullWidth\r\n        open={isOpen}\r\n        onClose={closeModal}\r\n    >\r\n        <DialogContent>\r\n            <Box display='flex' alignItems='center' justifyContent='space-between' pb={2}>\r\n                <Typography variant='h5'>{title}</Typography>\r\n                <IconButton onClick={closeModal}>\r\n                    <Close />\r\n                </IconButton>\r\n            </Box>\r\n            {body}\r\n        </DialogContent>\r\n    </Dialog>\r\n}\r\n\r\nexport default connect(mapStateToProps, { closeModal })(Modal)","import { makeStyles } from '@material-ui/core'\r\nimport { FC, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { boardInit } from '../../redux/actions/boards'\r\nimport { RootState } from '../../redux/reducers'\r\nimport Board from './Board'\r\nimport NewBoard from './NewBoard'\r\nimport Modal from '../Modal/Modal'\r\nimport { bindActionCreators, Dispatch } from 'redux'\r\n\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'inline-flex',\r\n        flexWrap: 'nowrap',\r\n        alignItems: 'flex-start',\r\n        paddingLeft: 16,\r\n        paddingRight: 16\r\n    },\r\n    transitionItem: {\r\n        width: 360,\r\n        '&:not(:last-child)': {\r\n            marginRight: theme.spacing(2)\r\n        }\r\n    },\r\n    enter: {\r\n        maxHeight: 0,\r\n        maxWidth: 0,\r\n        opacity: 0,\r\n        overflow: 'hidden',\r\n        transition: 'max-height, max-width .3s ease, opacity .2s ease .3s'\r\n    },\r\n    enterActive: {\r\n        maxHeight: 2000,\r\n        maxWidth: 1000,\r\n        opacity: 1\r\n    },\r\n    exit: {\r\n        maxHeight: 2000,\r\n        maxWidth: 1000,\r\n        opacity: 0,\r\n        overflow: 'hidden',\r\n        transition: 'opacity .3s ease, max-height, max-width .2s ease .3s'\r\n    },\r\n    exitActive: {\r\n        opacity: 0,\r\n        maxHeight: 0,\r\n        maxWidth: 0,\r\n    },\r\n}))\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({ boardInit }, dispatch)\r\nconst mapStateToProps = ({ boards }: RootState) => ({ boards })\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & ReturnType<typeof mapStateToProps> \r\n\r\nconst Dashboard: FC<Props> = ({ boardInit, boards }) => {\r\n    useEffect(() => { boardInit() }, [])\r\n\r\n    const { root, transitionItem, ...ani } = styles()\r\n\r\n    return <>\r\n        <TransitionGroup className={root}>\r\n            {boards.map(board =>\r\n                <CSSTransition\r\n                    key={board.id}\r\n                    timeout={500}\r\n                    classNames={ani}\r\n                >\r\n                    <div className={transitionItem}>\r\n                        <Board {...board} />\r\n                    </div>\r\n                </CSSTransition>\r\n            )}\r\n            <CSSTransition\r\n                key='newBoard'\r\n                timeout={500}\r\n                classNames={ani}\r\n            >\r\n                <div className={transitionItem}>\r\n                    <NewBoard />\r\n                </div>\r\n            </CSSTransition>\r\n        </TransitionGroup>\r\n        <Modal />\r\n    </>\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)","import { createMuiTheme } from \"@material-ui/core\"\r\n\r\nexport const pink = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#B690AA',\r\n            main: '#946184',\r\n            dark: '#634058'\r\n        },\r\n        secondary: {\r\n            light: '#F8F2F3',\r\n            main: '#DBBDC2',\r\n            dark: '#BE8991'\r\n        }\r\n    },\r\n    overrides: {\r\n        MuiTypography: {\r\n            root: {\r\n                color: '#57384F',\r\n            },\r\n            h3: {\r\n                fontFamily: \"'Lato', sans-serif\",\r\n                textTransform: 'uppercase',\r\n                fontWeight: 'bold'\r\n            },\r\n            h6: {\r\n                fontFamily: \"'Oswald', sans-serif\",\r\n                fontWeight: 'bold'\r\n            },\r\n            body1: {\r\n                fontFamily: \"'Oswald', sans-serif\",\r\n            }\r\n        },\r\n        MuiIconButton: {\r\n            colorPrimary: {\r\n                boxShadow: \"rgba(183, 164, 174, 0.25) 0px 50px 100px -20px, #948E9988 0px 30px 60px -30px, #946184 0px -2px 6px 0px inset\",\r\n                '&.Mui-disabled': {\r\n                    boxShadow: \"rgba(183, 164, 174, 0.25) 0px 50px 100px -20px, #948E9988 0px 30px 60px -30px, #C8BCC2 0px -2px 6px 0px inset\",\r\n                    color: '#C8BCC2'\r\n                }\r\n            }\r\n        },\r\n        MuiButton: {\r\n            contained: {\r\n                '&.Mui-disabled': {\r\n                    color: '#C8BCC2',\r\n                    backgroundColor: '#F6F4F5'\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const blue = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#B9C5ED',\r\n            main: '#3B60CE',\r\n            dark: '#254093',\r\n        },\r\n        secondary: {\r\n            light: '#F2F3F8',\r\n            main: '#BDC2DB',\r\n            dark: '#8991BE'\r\n        }\r\n    },\r\n    overrides: {\r\n        MuiTypography: {\r\n            root: {\r\n                color: '#202846',\r\n                fontFamily: \"'Oswald', sans-serif\",\r\n            },\r\n            h3: {\r\n                fontFamily: \"'Lato', sans-serif\",\r\n                textTransform: 'uppercase',\r\n                fontWeight: 'bold'\r\n            },\r\n            h6: {\r\n                fontWeight: 'bold'\r\n            }\r\n        },\r\n        MuiIconButton: {\r\n            colorPrimary: {\r\n                boxShadow: \"rgba(183, 164, 174, 0.25) 0px 50px 100px -20px, #948E9988 0px 30px 60px -30px, #8991BE 0px -2px 6px 0px inset\",\r\n                '&.Mui-disabled': {\r\n                    boxShadow: \"rgba(183, 164, 174, 0.25) 0px 50px 100px -20px, #948E9988 0px 30px 60px -30px, #F2F3F8 0px -2px 6px 0px inset\",\r\n                    color: '#BDC2DB'\r\n                }\r\n            }\r\n        },\r\n        MuiButton: {\r\n            contained: {\r\n                '&.Mui-disabled': {\r\n                    color: '#BDC2DB',\r\n                    backgroundColor: '#F2F3F8'\r\n                }\r\n            }\r\n        }\r\n    }\r\n})","import { Box, Button, Card, CircularProgress, TextField, Typography } from \"@material-ui/core\"\r\nimport { useFormik } from \"formik\"\r\nimport ErrorMessage from '../ErrorMessage'\r\nimport { FC } from \"react\"\r\nimport *  as yup from 'yup'\r\nimport { connect } from \"react-redux\"\r\nimport { signUp } from \"../../redux/actions/system\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { bindActionCreators, Dispatch } from \"redux\"\r\nimport PasswordField from \"../PasswordInput\"\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({ signUp }, dispatch)\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps>\r\n\r\nconst schema = yup.object({\r\n    username: yup\r\n        .string()\r\n        .required('заполните поле'),\r\n    email: yup\r\n        .string()\r\n        .required('заполните поле')\r\n        .email('некорректный email'),\r\n    password: yup\r\n        .string()\r\n        .required('заполните поле')\r\n        .matches(/[A-ZА-ЯЁ]/, 'должен содержать заглавные символы')\r\n        .matches(/[a-zа-яё]/, 'должен содержать cтрочные символы')\r\n        .matches(/\\d/, 'должен содержать цифры')\r\n        .min(8, 'минимум 8 символов'),\r\n    confirmPassword: yup\r\n        .string()\r\n        .oneOf([yup.ref('password'), null], 'Пароли должны совпадать')\r\n})\r\n\r\nconst SignUp: FC<Props> = ({ signUp }) => {\r\n    const { handleSubmit, values, errors, touched, handleChange, handleBlur, status, isSubmitting } = useFormik({\r\n        initialValues: { username: '', email: '', password: '', confirmPassword: '' },\r\n        validationSchema: schema,\r\n        onSubmit: async ({ username, email, password }, { setSubmitting, setStatus }) => {\r\n            await signUp({ username, email, password }, setStatus)\r\n            setSubmitting(false)\r\n        }\r\n    })\r\n\r\n    return <Box maxWidth={360} mx='auto'>\r\n        <Card elevation={3}>\r\n            <Box p={2}>\r\n                <Typography align='center' variant='h6' gutterBottom>\r\n                    Регистрация\r\n                </Typography>\r\n                <form noValidate onSubmit={handleSubmit}>\r\n                    <ErrorMessage\r\n                        msg={status}\r\n                        show={!!status}\r\n                    />\r\n                    <Box py={1}>\r\n                        <TextField\r\n                            name='username'\r\n                            autoComplete='off'\r\n                            label='Имя'\r\n                            size='small'\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.username}\r\n                            fullWidth\r\n                        />\r\n                        <ErrorMessage\r\n                            show={!!(touched.username && errors.username)}\r\n                            msg={errors.username?.toString()}\r\n                        />\r\n                    </Box>\r\n                    <Box py={1}>\r\n                        <TextField\r\n                            name='email'\r\n                            autoComplete='off'\r\n                            label='Email'\r\n                            size='small'\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.email}\r\n                            fullWidth\r\n                        />\r\n                        <ErrorMessage\r\n                            show={!!(touched.email && errors.email)}\r\n                            msg={errors.email?.toString()}\r\n                        />\r\n                    </Box>\r\n                    <Box py={1}>\r\n                        <PasswordField\r\n                            name='password'\r\n                            label='Пароль'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password}\r\n                        />\r\n                        <ErrorMessage\r\n                            show={!!touched.password}\r\n                            msg={errors.password?.toString()}\r\n                        />\r\n                    </Box>\r\n                    <Box py={1}>\r\n                        <PasswordField\r\n                            name='confirmPassword'\r\n                            label='Пароль'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.confirmPassword}\r\n                        />\r\n                        <ErrorMessage\r\n                            show={!!(touched.confirmPassword && errors.confirmPassword)}\r\n                            msg={errors.confirmPassword?.toString()}\r\n                        />\r\n                    </Box>\r\n                    <Box py={1}>\r\n                        <Typography align='center'>\r\n                            Уже есть аккаунт?{' '}<Link to='/signin'>Войти</Link>\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box py={1}>\r\n                        <Button disabled={isSubmitting} type='submit' color='primary' variant='contained' fullWidth>\r\n                            {isSubmitting ? <CircularProgress size={24} /> : 'Отправить'}\r\n                        </Button>\r\n                    </Box>\r\n                </form>\r\n            </Box>\r\n        </Card>\r\n    </Box>\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp)","import React, { FC, useEffect } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport SignIn from \"./components/Auth/SignIn\";\nimport { AuthRoute, PrivateRoute } from \"./components/Route\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport { AppBar, Box, Button, CircularProgress, CssBaseline, makeStyles, ThemeProvider, Toolbar, Typography } from \"@material-ui/core\";\nimport { RootState } from \"./redux/reducers\";\nimport { appInit, signOut } from \"./redux/actions\";\nimport { pink } from \"./theme\";\nimport SignUp from \"./components/Auth/SignUp\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nconst mapStateToProps = ({ system }: RootState) => system\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  appInit: bindActionCreators(appInit, dispatch),\n  signOut: bindActionCreators(signOut, dispatch)\n})\n\ntype Props = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n\nconst useStyles = makeStyles({\n  logo: {\n    flexGrow: 1,\n    textTransform: 'uppercase'\n  }\n})\n\nconst App: FC<Props> = ({ appInit, isInit, signOut, user }) => {\n  useEffect(() => { appInit() }, [])\n\n  const { logo } = useStyles()\n\n  return <ThemeProvider theme={pink}>\n    <CssBaseline />\n    <AppBar variant='elevation' color='secondary'>\n      <Toolbar>\n        <Typography variant=\"h4\" component='h1' className={logo}>Kanban</Typography>\n        {user && <Button onClick={signOut} color='primary' variant='contained'>Выход</Button>}\n      </Toolbar>\n    </AppBar>\n    <Box mt={12}>\n      {isInit ?\n        <BrowserRouter>\n          <Switch>\n            <AuthRoute path=\"/signin\">\n              <SignIn />\n            </AuthRoute>\n            <AuthRoute path=\"/signup\">\n              <SignUp />\n            </AuthRoute>\n            <PrivateRoute path='/'>\n              <Dashboard />\n            </PrivateRoute>\n            <Route>\n              <Redirect to='/' />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n        : <Box width='100%' display='flex' justifyContent='center'>\n          <CircularProgress />\n        </Box>}\n    </Box>\n  </ThemeProvider>\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <DndProvider backend={HTML5Backend}>\n        <App />\n      </DndProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n\n"],"sourceRoot":""}